import random
print("Python Tick Tac Toe Game")
print("Player 1 is X and Player 2 is O")
board = [
    "[ ]", "[ ]", "[ ]",
    "[ ]", "[ ]", "[ ]",
    "[ ]", "[ ]", "[ ]"
]
identifiers = {str(i + 1): i for i in range(9)}
def print_board():
    color_map = {
        '[X]': '\033[1;31m[X]\033[0m',  # red --> X
        '[O]': '\033[1;34m[O]\033[0m',  # blue --> O
        '[ ]': '\033[1;37m[ ]\033[0m'   # white --> empty
    }
    for i in range(0, 9, 3):
        row = [color_map.get(cell, cell) for cell in board[i:i+3]]
        print(" ".join(row))
# Main game loop
def main():
    score = {"X": 0, "O": 0}
    print("\033[1m=== Reference Board ===\033[0m")
    ref_board = [f"[{i+1}]" for i in range(9)]
    for i in range(0, 9, 3):
        print(" ".join(ref_board[i:i+3]))
    print("\033[1m======================\033[0m\n")
    while True:
        current_player = random.choice(["X", "O"])
        print(f"\033[1mCoin flip: Player {current_player} starts!\033[0m")
        global board
        board = ["[ ]"] * 9
        winner = None
        while True:
            print_board()
            print(f"Score: \033[1;31mX={score['X']}\033[0m | \033[1;34mO={score['O']}\033[0m")
            move = input(f"Player {current_player}, enter a position (1-9), 'restart' to reset, or 'quit' to exit: ")
            if move.lower() == 'quit':
                print("Game ended.")
                return
            if move.lower() == 'restart':
                board = ["[ ]"] * 9
                print("\033[1mBoard reset!\033[0m")
                current_player = random.choice(["X", "O"])
                print(f"\033[1mCoin flip: Player {current_player} starts!\033[0m")
                continue
            if move in identifiers and board[identifiers[move]] == "[ ]":
                board[identifiers[move]] = f"[{current_player}]"
                win_combos = [
                    [0,1,2], [3,4,5], [6,7,8], # rows
                    [0,3,6], [1,4,7], [2,5,8], # cols
                    [0,4,8], [2,4,6]           # diags
                ]
                for combo in win_combos:
                    if all(board[i] == f"[{current_player}]" for i in combo):
                        print_board()
                        print(f"Player {current_player} wins!")
                        score[current_player] += 1
                        winner = current_player
                        break
                else:
                    if all(cell != "[ ]" for cell in board):
                        print_board()
                        print("It's a tie!")
                        winner = "tie"
                if winner:
                    print(f"Score: \033[1;31mX={score['X']}\033[0m | \033[1;34mO={score['O']}\033[0m")
                    while True:
                        rematch = input("Rematch? (y/n): ").strip().lower()
                        if rematch == 'y':
                            break
                        elif rematch == 'n':
                            while True:
                                next_action = input("Type 'restart' to start a new match or 'quit' to exit: ").strip().lower()
                                if next_action == 'restart':
                                    break
                                elif next_action == 'quit':
                                    print("Game ended.")
                                    return
                                else:
                                    print("Invalid input. Please type 'restart' or 'quit'.")
                            break
                        else:
                            print("Invalid input. Please type 'y' or 'n'.")
                    if rematch == 'y':
                        break
                    elif rematch == 'n' and next_action == 'restart':
                        break
                    else:
                        return
                current_player = "O" if current_player == "X" else "X"
            else:
                print("Invalid move. Try again.")
if __name__ == "__main__":
    main()
